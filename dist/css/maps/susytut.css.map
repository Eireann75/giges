{"version":3,"sources":["partials/_normalize.scss","susytut.css","../../node_modules/susy/sass/susy/language/susy/_box-sizing.scss","../../node_modules/susy/sass/susy/output/support/_rem.scss","susytut.scss","../../node_modules/susy/sass/susy/language/susy/_container.scss","../../node_modules/susy/sass/susy/output/support/_clearfix.scss","../../node_modules/susy/sass/susy/language/susy/_span.scss","../../node_modules/susy/sass/susy/output/shared/_direction.scss","../../node_modules/susy/sass/susy/language/susy/_gutters.scss"],"names":[],"mappings":"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","file":"susytut.css","sourcesContent":["////\r\n/// normalize-libsass 1.0.3\r\n/// MIT/GPLv2 License\r\n/// lb.cm/normalize-libsass\r\n////\r\n\r\n/// Strict normalize\r\n/// @type Boolean [false] - Set to true for strict normalize output.\r\n$strict-normalize: false !default;\r\n\r\n/// Font-size baseline\r\n/// @type Length [16px]\r\n$base-font-size: 16px !default;\r\n\r\n/// Line-height baseline\r\n/// @type Length [24px]\r\n$base-line-height: 24px !default;\r\n\r\n/// H1 headline size\r\n/// @type Length [2 * 16px]\r\n$h1-font-size: 2 * $base-font-size !default;\r\n\r\n/// Rhythm unit\r\n/// @type String [em] - Supported values: px, em, rem.\r\n$rhythm-unit: 'em' !default;\r\n\r\n/// Font-family baseline\r\n/// @type Map [sans-serif]\r\n$base-font-family: sans-serif !default;\r\n\r\n/// Supported Browser versions\r\n/// @type Map\r\n$browser-min-version: (\r\n  'chrome':  null,\r\n  'firefox': null,\r\n  'ie':      10,\r\n  'safari':  9,\r\n  'opera':   null\r\n) !default;\r\n\r\n// Assure no variables get overridden if strict is on\r\n$normalize-base-font-size: if($strict-normalize, 16px, $base-font-size);\r\n$normalize-base-line-height: if($strict-normalize, 24px, $base-line-height);\r\n$normalize-h1-font-size: if($strict-normalize, 2 * $base-font-size, $h1-font-size);\r\n$normalize-rhythm-unit: if($strict-normalize, 'em', $rhythm-unit);\r\n$normalize-base-font-family: if($strict-normalize, sans-serif, $base-font-family);\r\n\r\n/// Normalize Legacy Browser Support function\r\n///\r\n/// @requires {variable} browser\r\n/// @requires {variable} version\r\n///\r\n/// @param {String} $browser - A valid browser name from $browser-minimum-versions.\r\n/// @param {Number} $version - A browser version.\r\n///\r\n/// @return {Bool} - If browser is null or valid returns true.\r\n@function normalize-browser-support($browser, $version) {\r\n  // If browser is not null then check for support\r\n  @if map-get($browser-min-version, $browser) {\r\n    $supported-version: map-get($browser-min-version, $browser);\r\n    // Pass if browser is supported or strict-normalize is on\r\n    @if $strict-normalize or $supported-version <= $version {\r\n      @return true;\r\n    } @else {\r\n      // Fail if browser is unsupported\r\n      @return null;\r\n    }\r\n  }\r\n  // Pass if browser is null\r\n  @return true;\r\n}\r\n\r\n/// Convert one unit into another\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Number} $value - Initial value\r\n/// @param {String} $unit - Desired unit\r\n///\r\n/// @return {Number}\r\n/// @throw Error if `$unit` does not exist or if units are incompatible.\r\n@function normalize-convert-unit($value, $unit) {\r\n  // scss-lint:disable ZeroUnit\r\n  $units: (\r\n    'px': 0px,\r\n    'cm': 0cm,\r\n    'mm': 0mm,\r\n    '%': 0%,\r\n    'in': 0in,\r\n    'em': 0em,\r\n    'rem': 0rem,\r\n    'pt': 0pt\r\n  );\r\n  // scss-lint:enable ZeroUnit\r\n\r\n  @if map-has-key($units, $unit) {\r\n    @return map-get($units, $unit) + $value;\r\n  }\r\n\r\n  @error \"Unknown unit `#{$unit}`.\";\r\n}\r\n\r\n/**\r\n* 1. Set default font family to sans-serif.\r\n* 2. Prevent iOS and IE text size adjust after device orientation\r\n*    change, without disabling\r\n*    user zoom.\r\n*/\r\nhtml {\r\n  font-family: $normalize-base-font-family; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n* Remove default margin.\r\n*/\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/* HTML5 display definitions\r\n   ========================================================================== */\r\n\r\n/**\r\n* Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n* Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n* and Firefox.\r\n* Correct `block` display not defined for `main` in IE 11.\r\n*/\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n\r\n/**\r\n* 1. Correct `inline-block` display not defined in IE 8/9.\r\n* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n*/\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  @if normalize-browser-support('ie', 9) {\r\n    display: inline-block; /* 1 */\r\n  }\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n* Prevent modern browsers from displaying `audio` without controls.\r\n* Remove excess height in iOS 5 devices.\r\n*/\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n@if normalize-browser-support('ie', 10) {\r\n  /**\r\n   * Address `[hidden]` styling not present in IE 8/9/10.\r\n   */\r\n\r\n  [hidden] {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/**\r\n* Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\r\n*/\r\n\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/* Links\r\n   ========================================================================== */\r\n\r\n@if normalize-browser-support('ie', 10) {\r\n  /**\r\n   * Remove the gray background color from active links in IE 10.\r\n   */\r\n\r\n  a {\r\n    background-color: transparent;\r\n  }\r\n}\r\n\r\n/**\r\n* Improve readability of focused elements when they are also in an\r\n* active/hover state.\r\n*/\r\n\r\na:active,\r\na:hover {\r\n  outline: 0;\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n* Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n*/\r\n\r\nabbr[title] {\r\n  border-bottom: 1px dotted;\r\n}\r\n\r\n/**\r\n* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n*/\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\n/**\r\n* Address styling not present in Safari and Chrome.\r\n*/\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\n/**\r\n* Address variable `h1` font-size and margin within `section` and `article`\r\n* contexts in Firefox 4+, Safari, and Chrome.\r\n*/\r\n\r\nh1 {\r\n  font-size: normalize-convert-unit(($normalize-h1-font-size / $normalize-base-font-size), $normalize-rhythm-unit);\r\n  margin: normalize-convert-unit(($normalize-base-font-size / $normalize-base-line-height), $normalize-rhythm-unit) 0;\r\n}\r\n\r\n@if normalize-browser-support('ie', 9) {\r\n  /**\r\n   * Address styling not present in IE 8/9.\r\n   */\r\n\r\n  mark {\r\n    background: #ff0;\r\n    color: #000;\r\n  }\r\n}\r\n\r\n/**\r\n* Address inconsistent and variable font size in all browsers.\r\n*/\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n* Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n*/\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n@if normalize-browser-support('ie', 10) {\r\n  /**\r\n   * Remove border when inside `a` element in IE 8/9/10.\r\n   */\r\n\r\n  img {\r\n    border: 0;\r\n  }\r\n}\r\n\r\n@if normalize-browser-support('ie', 11) {\r\n  /**\r\n   * Correct overflow not hidden in IE 9/10/11.\r\n   */\r\n\r\n  svg:not(:root) {\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n@if normalize-browser-support('ie', 9) or normalize-browser-support('safari', 6) {\r\n  /**\r\n   * Address margin not present in IE 8/9 and Safari.\r\n   */\r\n\r\n  figure {\r\n    margin: 1em 40px;\r\n  }\r\n}\r\n\r\n/**\r\n* Address differences between Firefox and other browsers.\r\n*/\r\n\r\nhr {\r\n  box-sizing: content-box;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n* Contain overflow in all browsers.\r\n*/\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n* Address odd `em`-unit font size rendering in all browsers.\r\n*/\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n* Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n* styling of `select`, unless a `border` property is set.\r\n*/\r\n\r\n/**\r\n* 1. Correct color not being inherited.\r\n*    Known issue: affects color of disabled elements.\r\n* 2. Correct font properties not being inherited.\r\n* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n*/\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  color: inherit; /* 1 */\r\n  font: inherit; /* 2 */\r\n  margin: 0; /* 3 */\r\n}\r\n\r\n@if normalize-browser-support('ie', 11) {\r\n  /**\r\n   * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n   */\r\n\r\n  button {\r\n    overflow: visible;\r\n  }\r\n}\r\n\r\n/**\r\n* Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n* All other form control elements do not inherit `text-transform` values.\r\n* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n* Correct `select` style inheritance in Firefox.\r\n*/\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n*    and `video` controls.\r\n* 2. Correct inability to style clickable `input` types in iOS.\r\n* 3. Improve usability and consistency of cursor style between image-type\r\n*    `input` and others.\r\n*/\r\n\r\nbutton,\r\nhtml input[type='button'], /* 1 */\r\ninput[type='reset'],\r\ninput[type='submit'] {\r\n  -webkit-appearance: button; /* 2 */\r\n  cursor: pointer; /* 3 */\r\n}\r\n\r\n/**\r\n* Re-set default cursor for disabled elements.\r\n*/\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n\r\n/**\r\n* Remove inner padding and border in Firefox 4+.\r\n*/\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n* Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n* the UA stylesheet.\r\n*/\r\n\r\ninput {\r\n  line-height: normal;\r\n}\r\n\r\n@if normalize-browser-support('ie', 10) {\r\n  /**\r\n   * It's recommended that you don't attempt to style these elements.\r\n   * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n   *\r\n   * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n   * 2. Remove excess padding in IE 8/9/10.\r\n   */\r\n\r\n  input[type='checkbox'],\r\n  input[type='radio'] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n  }\r\n}\r\n\r\n/**\r\n* Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n* `font-size` values of the `input`, it causes the cursor style of the\r\n* decrement button to change from `default` to `text`.\r\n*/\r\n\r\ninput[type='number']::-webkit-inner-spin-button,\r\ninput[type='number']::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n* 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n* 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\r\n*/\r\n\r\ninput[type='search'] {\r\n  box-sizing: content-box;\r\n}\r\n\r\n/**\r\n* Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n* Safari (but not Chrome) clips the cancel button when the search input has\r\n* padding (and `textfield` appearance).\r\n*/\r\n\r\ninput[type='search']::-webkit-search-cancel-button,\r\ninput[type='search']::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n* Define consistent border, margin, and padding.\r\n*/\r\n\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n* 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n* 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n*/\r\n\r\nlegend {\r\n  @if normalize-browser-support('ie', 11) {\r\n    border: 0; /* 1 */\r\n  }\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n@if normalize-browser-support('ie', 11) {\r\n  /**\r\n   * Remove default vertical scrollbar in IE 8/9/10/11.\r\n   */\r\n\r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n}\r\n\r\n/**\r\n* Don't inherit the `font-weight` (applied by a rule above).\r\n* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n*/\r\n\r\noptgroup {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Tables\r\n   ========================================================================== */\r\n\r\n/**\r\n* Remove most spacing between table cells.\r\n*/\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 0;\r\n}\r\n","/**\r\n* 1. Set default font family to sans-serif.\r\n* 2. Prevent iOS and IE text size adjust after device orientation\r\n*    change, without disabling\r\n*    user zoom.\r\n*/\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n\n/**\r\n* Remove default margin.\r\n*/\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\r\n   ========================================================================== */\n/**\r\n* Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n* Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n* and Firefox.\r\n* Correct `block` display not defined for `main` in IE 11.\r\n*/\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\r\n* 1. Correct `inline-block` display not defined in IE 8/9.\r\n* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n*/\naudio,\ncanvas,\nprogress,\nvideo {\n  vertical-align: baseline;\n  /* 2 */\n}\n\n/**\r\n* Prevent modern browsers from displaying `audio` without controls.\r\n* Remove excess height in iOS 5 devices.\r\n*/\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\r\n   * Address `[hidden]` styling not present in IE 8/9/10.\r\n   */\n[hidden] {\n  display: none;\n}\n\n/**\r\n* Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\r\n*/\ntemplate {\n  display: none;\n}\n\n/* Links\r\n   ========================================================================== */\n/**\r\n   * Remove the gray background color from active links in IE 10.\r\n   */\na {\n  background-color: transparent;\n}\n\n/**\r\n* Improve readability of focused elements when they are also in an\r\n* active/hover state.\r\n*/\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\r\n   ========================================================================== */\n/**\r\n* Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n*/\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\r\n* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n*/\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\r\n* Address styling not present in Safari and Chrome.\r\n*/\ndfn {\n  font-style: italic;\n}\n\n/**\r\n* Address variable `h1` font-size and margin within `section` and `article`\r\n* contexts in Firefox 4+, Safari, and Chrome.\r\n*/\nh1 {\n  font-size: 2em;\n  margin: 0.66667em 0;\n}\n\n/**\r\n* Address inconsistent and variable font size in all browsers.\r\n*/\nsmall {\n  font-size: 80%;\n}\n\n/**\r\n* Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n*/\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\r\n   ========================================================================== */\n/**\r\n   * Remove border when inside `a` element in IE 8/9/10.\r\n   */\nimg {\n  border: 0;\n}\n\n/**\r\n   * Correct overflow not hidden in IE 9/10/11.\r\n   */\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\r\n   ========================================================================== */\n/**\r\n* Address differences between Firefox and other browsers.\r\n*/\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\r\n* Contain overflow in all browsers.\r\n*/\npre {\n  overflow: auto;\n}\n\n/**\r\n* Address odd `em`-unit font size rendering in all browsers.\r\n*/\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\r\n   ========================================================================== */\n/**\r\n* Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n* styling of `select`, unless a `border` property is set.\r\n*/\n/**\r\n* 1. Correct color not being inherited.\r\n*    Known issue: affects color of disabled elements.\r\n* 2. Correct font properties not being inherited.\r\n* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n  margin: 0;\n  /* 3 */\n}\n\n/**\r\n   * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n   */\nbutton {\n  overflow: visible;\n}\n\n/**\r\n* Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n* All other form control elements do not inherit `text-transform` values.\r\n* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n* Correct `select` style inheritance in Firefox.\r\n*/\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\r\n* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n*    and `video` controls.\r\n* 2. Correct inability to style clickable `input` types in iOS.\r\n* 3. Improve usability and consistency of cursor style between image-type\r\n*    `input` and others.\r\n*/\nbutton,\nhtml input[type='button'],\ninput[type='reset'],\ninput[type='submit'] {\n  -webkit-appearance: button;\n  /* 2 */\n  cursor: pointer;\n  /* 3 */\n}\n\n/**\r\n* Re-set default cursor for disabled elements.\r\n*/\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\r\n* Remove inner padding and border in Firefox 4+.\r\n*/\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\r\n* Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n* the UA stylesheet.\r\n*/\ninput {\n  line-height: normal;\n}\n\n/**\r\n   * It's recommended that you don't attempt to style these elements.\r\n   * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n   *\r\n   * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n   * 2. Remove excess padding in IE 8/9/10.\r\n   */\ninput[type='checkbox'],\ninput[type='radio'] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\r\n* Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n* `font-size` values of the `input`, it causes the cursor style of the\r\n* decrement button to change from `default` to `text`.\r\n*/\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\r\n* 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n* 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\r\n*/\ninput[type='search'] {\n  box-sizing: content-box;\n}\n\n/**\r\n* Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n* Safari (but not Chrome) clips the cancel button when the search input has\r\n* padding (and `textfield` appearance).\r\n*/\ninput[type='search']::-webkit-search-cancel-button,\ninput[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\r\n* Define consistent border, margin, and padding.\r\n*/\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\r\n* 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n* 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n*/\nlegend {\n  border: 0;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\r\n   * Remove default vertical scrollbar in IE 8/9/10/11.\r\n   */\ntextarea {\n  overflow: auto;\n}\n\n/**\r\n* Don't inherit the `font-weight` (applied by a rule above).\r\n* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n*/\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\r\n   ========================================================================== */\n/**\r\n* Remove most spacing between table cells.\r\n*/\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\n*, *:before, *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.container {\n  background-color: #fbeecb;\n  max-width: 40rem;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.container:after {\n  content: \" \";\n  display: block;\n  clear: both;\n}\n\n.ag1 {\n  width: 18.36735%;\n  float: left;\n  margin-right: 2.04082%;\n}\n\n.ag2 {\n  width: 59.18367%;\n  float: left;\n  margin-right: 2.04082%;\n}\n\n.ag3 {\n  width: 18.36735%;\n  float: right;\n  margin-right: 0;\n}\n\n.ag4 {\n  width: 48.27586%;\n  float: left;\n  margin-right: 3.44828%;\n}\n\n.ag5 {\n  width: 48.27586%;\n  float: right;\n  margin-right: 0;\n}\n\n.ag6 {\n  width: 31.03448%;\n  float: left;\n  margin-right: 3.44828%;\n}\n\n.ag7 {\n  width: 65.51724%;\n  float: right;\n  margin-right: 0;\n}\n\n.ag8 {\n  width: 47.36842%;\n  float: left;\n  margin-right: 5.26316%;\n}\n\n.ag9 {\n  width: 47.36842%;\n  float: right;\n  margin-right: 0;\n}\n\n.ag10 {\n  clear: both;\n}\n\n.ag1, .ag3 {\n  background-color: #71dad2;\n}\n\n.ag2 {\n  background-color: #fae7b3;\n}\n\n.ag4, .ag5, .ag8, .ag9 {\n  background-color: #ee9e9c;\n}\n\n.ag6 {\n  background-color: #f09671;\n}\n\n.ag7 {\n  background-color: #f6d784;\n}\n\n.ag10 {\n  background-color: #ea9fc3;\n}\n\n/*\r\nText Styles\r\n*/\nhtml {\n  font-size: 112.5%;\n}\n\nh2 {\n  text-align: center;\n  font-size: 1rem;\n  font-weight: normal;\n  padding-top: 1.8rem;\n  padding-bottom: 1.8rem;\n}\n","// Susy Box Sizing\n// =================\n\n// Global Box Sizing\n// -----------------\n// Set a box model globally on all elements.\n// - [$box]: border-box | content-box\n// - [$inherit]: true | false\n@mixin global-box-sizing(\n  $box: susy-get(global-box-sizing),\n  $inherit: false\n) {\n  $inspect: $box;\n\n  @if $inherit {\n    @at-root {\n       html { @include output((box-sizing: $box)); }\n       *, *:before, *:after { box-sizing: inherit; }\n     }\n  } @else {\n    *, *:before, *:after { @include output((box-sizing: $box)); }\n  }\n\n  @include susy-inspect(global-box-sizing, $inspect);\n  @include update-box-model($box);\n}\n\n// Border Box Sizing\n// -----------------\n// A legacy shortcut...\n// - [$inherit]: true | false\n@mixin border-box-sizing(\n  $inherit: false\n) {\n  @include global-box-sizing(border-box, $inherit);\n}\n\n// Update Box Model\n// ----------------\n// PRIVATE: Updates global box model setting\n@mixin update-box-model(\n  $box\n) {\n  @if $box != susy-get(global-box-sizing) {\n  @include susy-set(global-box-sizing, $box);\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","@import \"partials/normalize\";\r\n@import \"../../node_modules/susy/sass/susy\";\r\n\r\n$susy: (\r\n\tglobal-box-sizing: border-box,\r\n\tuse-custom: (rem: true)\r\n\t);\r\n\r\n@include border-box-sizing;\r\n\r\n.container {\r\n\tbackground-color: #fbeecb;\r\n\t@include container (40rem);\r\n}\r\n.ag1 {\r\n\t@include span(2 of 10);\r\n}\r\n.ag2{\r\n\t@include span(6 of 10);\r\n}\r\n.ag3 {\r\n\t@include span(2 of 10 last);\r\n}\r\n.ag4 {\r\n\t@include span(3 of 6);\r\n}\r\n.ag5 {\r\n\t@include span(3 of 6 last);\r\n}\r\n.ag6 {\r\n\t@include span(2 of 6);\r\n}\r\n.ag7 {\r\n\t@include span(4 of 6 last);\r\n}\r\n.ag8 {\r\n\t@include span(2 of 4);\r\n}\r\n.ag9 {\r\n\t@include span(2 of 4 last);\r\n}\r\n.ag10 {\r\n\tclear: both;\r\n\t// Alternatively, you can now use the 'span' mixin with the 'full' keyword to tell Susy this should be a 100% width \r\n\t// @include span(full);\r\n}\r\n.ag1, .ag3 {\r\n\tbackground-color: #71dad2;\r\n}\r\n\r\n.ag2 {\r\n\tbackground-color: #fae7b3;\r\n}\r\n\r\n.ag4,.ag5,.ag8,.ag9 {\r\n\tbackground-color: #ee9e9c;\r\n}\r\n\r\n.ag6 {\r\n\tbackground-color: #f09671;\r\n}\r\n\r\n.ag7 {\r\n\tbackground-color: #f6d784;\r\n}\r\n\r\n.ag10 {\r\n\tbackground-color: #ea9fc3;\r\n}\r\n\r\n/*\r\nText Styles\r\n*/\r\nhtml {\r\n\tfont-size: 112.5%;\r\n}\r\n\r\nh2 {\r\n\ttext-align: center;\r\n\tfont-size: 1rem;\r\n\tfont-weight: normal;\r\n\tpadding-top: 1.8rem;\r\n\tpadding-bottom: 1.8rem;\r\n}","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n"],"sourceRoot":"/source/"}